2023-04-10 16:07:24.628 INFO  --- [           main] tleserver.BattleServerApplication[   55] : Starting BattleServerApplication v0.0.1-SNAPSHOT using Java 11.0.13 on TT-Legion-Laptop with PID 36012 (D:\Projects\JavaProjects\BattleServer-Tiny\BattleServer-0.0.1-SNAPSHOT.jar started by TT in D:\Projects\JavaProjects\BattleServer-Tiny)
2023-04-10 16:07:24.630 INFO  --- [           main] tleserver.BattleServerApplication[  640] : The following 1 profile is active: "battle"
2023-04-10 16:07:25.304 INFO  --- [           main] c.RepositoryConfigurationDelegate[  262] : Multiple Spring Data modules found, entering strict repository configuration mode
2023-04-10 16:07:25.307 INFO  --- [           main] c.RepositoryConfigurationDelegate[  132] : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2023-04-10 16:07:25.323 INFO  --- [           main] c.RepositoryConfigurationDelegate[  201] : Finished Spring Data repository scanning in 5 ms. Found 0 Redis repository interfaces.
2023-04-10 16:07:25.490 INFO  --- [           main] .cloud.context.scope.GenericScope[  283] : BeanFactory id=4eb024a5-adf9-3878-9701-863985c01b85
2023-04-10 16:07:26.005 INFO  --- [           main] w.embedded.tomcat.TomcatWebServer[  108] : Tomcat initialized with port(s): 8881 (http)
2023-04-10 16:07:26.013 INFO  --- [           main] e.coyote.http11.Http11NioProtocol[  173] : Initializing ProtocolHandler ["http-nio-8881"]
2023-04-10 16:07:26.014 INFO  --- [           main] che.catalina.core.StandardService[  173] : Starting service [Tomcat]
2023-04-10 16:07:26.014 INFO  --- [           main] ache.catalina.core.StandardEngine[  173] : Starting Servlet engine: [Apache Tomcat/9.0.65]
2023-04-10 16:07:26.190 INFO  --- [           main] .a.c.c.C.[Tomcat].[localhost].[/][  173] : Initializing Spring embedded WebApplicationContext
2023-04-10 16:07:26.190 INFO  --- [           main] ervletWebServerApplicationContext[  292] : Root WebApplicationContext: initialization completed in 1517 ms
2023-04-10 16:07:26.353 INFO  --- [           main] .openfeign.FeignClientFactoryBean[  418] : For 'MV-CommonData-Server' URL not provided. Will try picking an instance via load-balancing.
2023-04-10 16:07:26.752 INFO  --- [           main] org.redisson.Version[   41]              : Redisson 3.17.3
2023-04-10 16:07:27.501 INFO  --- [isson-netty-2-6] c.pool.MasterPubSubConnectionPool[  158] : 1 connections initialized for localhost/127.0.0.1:6379
2023-04-10 16:07:27.547 INFO  --- [sson-netty-2-20] nection.pool.MasterConnectionPool[  158] : 24 connections initialized for localhost/127.0.0.1:6379
2023-04-10 16:07:28.813 INFO  --- [           main] ryClientOptionalArgsConfiguration[   68] : Eureka HTTP Client uses RestTemplate.
2023-04-10 16:07:29.145 WARN  --- [           main] on$LoadBalancerCaffeineWarnLogger[   82] : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2023-04-10 16:07:29.198 INFO  --- [           main] etflix.eureka.InstanceInfoFactory[   67] : Setting initial instance status as: STARTING
2023-04-10 16:07:29.287 INFO  --- [           main] netflix.discovery.DiscoveryClient[  372] : Initializing Eureka in region us-east-1
2023-04-10 16:07:29.291 INFO  --- [           main] n.d.s.r.aws.ConfigClusterResolver[   43] : Resolving eureka endpoints via configuration
2023-04-10 16:07:29.314 INFO  --- [           main] netflix.discovery.DiscoveryClient[ 1007] : Disable delta property : false
2023-04-10 16:07:29.314 INFO  --- [           main] netflix.discovery.DiscoveryClient[ 1008] : Single vip registry refresh property : null
2023-04-10 16:07:29.315 INFO  --- [           main] netflix.discovery.DiscoveryClient[ 1009] : Force full registry fetch : false
2023-04-10 16:07:29.315 INFO  --- [           main] netflix.discovery.DiscoveryClient[ 1010] : Application is null : false
2023-04-10 16:07:29.315 INFO  --- [           main] netflix.discovery.DiscoveryClient[ 1011] : Registered Applications size is zero : true
2023-04-10 16:07:29.315 INFO  --- [           main] netflix.discovery.DiscoveryClient[ 1013] : Application version is -1: true
2023-04-10 16:07:29.315 INFO  --- [           main] netflix.discovery.DiscoveryClient[ 1097] : Getting all instance registry info from the eureka server
2023-04-10 16:07:50.513 INFO  --- [           main] s.t.d.RedirectingEurekaHttpClient[   84] : Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://172.31.19.77:18080/eureka/}, exception=I/O error on GET request for "http://172.31.19.77:18080/eureka/apps/": Connect to 172.31.19.77:18080 [/172.31.19.77] failed: Connection timed out: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to 172.31.19.77:18080 [/172.31.19.77] failed: Connection timed out: connect stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://172.31.19.77:18080/eureka/apps/": Connect to 172.31.19.77:18080 [/172.31.19.77] failed: Connection timed out: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to 172.31.19.77:18080 [/172.31.19.77] failed: Connection timed out: connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:785)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:711)
	at org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:602)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.getApplicationsInternal(RestTemplateEurekaHttpClient.java:145)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.getApplications(RestTemplateEurekaHttpClient.java:135)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1101)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:1014)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:441)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:283)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:279)
	at org.springframework.cloud.netflix.eureka.CloudEurekaClient.<init>(CloudEurekaClient.java:66)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration.eurekaClient(EurekaClientAutoConfiguration.java:295)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:653)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:638)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$1(AbstractBeanFactory.java:374)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.getBean(GenericScope.java:376)
	at org.springframework.cloud.context.scope.GenericScope.get(GenericScope.java:179)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:371)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.aop.target.SimpleBeanTargetSource.getTarget(SimpleBeanTargetSource.java:35)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration.getTargetObject(EurekaRegistration.java:127)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration.getEurekaClient(EurekaRegistration.java:115)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:282)
	at org.springframework.cloud.context.scope.GenericScope$LockedScopedProxyFactoryBean.invoke(GenericScope.java:485)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration$$EnhancerBySpringCGLIB$$d36d16f4.getEurekaClient(<generated>)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.maybeInitializeClient(EurekaServiceRegistry.java:54)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register(EurekaServiceRegistry.java:38)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.start(EurekaAutoServiceRegistration.java:83)
	at org.springframework.context.support.DefaultLifecycleProcessor.doStart(DefaultLifecycleProcessor.java:178)
	at org.springframework.context.support.DefaultLifecycleProcessor.access$200(DefaultLifecycleProcessor.java:54)
	at org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:356)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at org.springframework.context.support.DefaultLifecycleProcessor.startBeans(DefaultLifecycleProcessor.java:155)
	at org.springframework.context.support.DefaultLifecycleProcessor.onRefresh(DefaultLifecycleProcessor.java:123)
	at org.springframework.context.support.AbstractApplicationContext.finishRefresh(AbstractApplicationContext.java:935)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:586)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:147)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:734)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:408)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1306)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1295)
	at com.metavirus.battleserver.BattleServerApplication.main(BattleServerApplication.java:19)
Caused by: org.apache.http.conn.HttpHostConnectException: Connect to 172.31.19.77:18080 [/172.31.19.77] failed: Connection timed out: connect
	at org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:156)
	at org.apache.http.impl.conn.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:376)
	at org.apache.http.impl.execchain.MainClientExec.establishRoute(MainClientExec.java:393)
	at org.apache.http.impl.execchain.MainClientExec.execute(MainClientExec.java:236)
	at org.apache.http.impl.execchain.ProtocolExec.execute(ProtocolExec.java:186)
	at org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:89)
	at org.apache.http.impl.execchain.RedirectExec.execute(RedirectExec.java:110)
	at org.apache.http.impl.client.InternalHttpClient.doExecute(InternalHttpClient.java:185)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:83)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:87)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:776)
	... 68 more
Caused by: java.net.ConnectException: Connection timed out: connect
	at java.base/java.net.PlainSocketImpl.connect0(Native Method)
	at java.base/java.net.PlainSocketImpl.socketConnect(PlainSocketImpl.java:101)
	at java.base/java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:399)
	at java.base/java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:242)
	at java.base/java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:224)
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.base/java.net.Socket.connect(Socket.java:609)
	at org.apache.http.conn.socket.PlainConnectionSocketFactory.connectSocket(PlainConnectionSocketFactory.java:75)
	at org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:142)
	... 81 more

2023-04-10 16:07:50.513 WARN  --- [           main] d.s.t.d.RetryableEurekaHttpClient[  130] : Request execution failed with message: I/O error on GET request for "http://172.31.19.77:18080/eureka/apps/": Connect to 172.31.19.77:18080 [/172.31.19.77] failed: Connection timed out: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to 172.31.19.77:18080 [/172.31.19.77] failed: Connection timed out: connect
2023-04-10 16:07:50.513 INFO  --- [           main] netflix.discovery.DiscoveryClient[ 1021] : DiscoveryClient_MV-BATTLE-SERVER/TT-Legion-Laptop.mshome.net:MV-Battle-Server:8881 - was unable to refresh its cache! This periodic background refresh will be retried in 30 seconds. status = Cannot execute request on any known server stacktrace = com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1101)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:1014)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:441)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:283)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:279)
	at org.springframework.cloud.netflix.eureka.CloudEurekaClient.<init>(CloudEurekaClient.java:66)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration.eurekaClient(EurekaClientAutoConfiguration.java:295)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:653)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:638)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$1(AbstractBeanFactory.java:374)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.getBean(GenericScope.java:376)
	at org.springframework.cloud.context.scope.GenericScope.get(GenericScope.java:179)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:371)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.aop.target.SimpleBeanTargetSource.getTarget(SimpleBeanTargetSource.java:35)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration.getTargetObject(EurekaRegistration.java:127)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration.getEurekaClient(EurekaRegistration.java:115)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:282)
	at org.springframework.cloud.context.scope.GenericScope$LockedScopedProxyFactoryBean.invoke(GenericScope.java:485)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration$$EnhancerBySpringCGLIB$$d36d16f4.getEurekaClient(<generated>)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.maybeInitializeClient(EurekaServiceRegistry.java:54)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register(EurekaServiceRegistry.java:38)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.start(EurekaAutoServiceRegistration.java:83)
	at org.springframework.context.support.DefaultLifecycleProcessor.doStart(DefaultLifecycleProcessor.java:178)
	at org.springframework.context.support.DefaultLifecycleProcessor.access$200(DefaultLifecycleProcessor.java:54)
	at org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:356)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at org.springframework.context.support.DefaultLifecycleProcessor.startBeans(DefaultLifecycleProcessor.java:155)
	at org.springframework.context.support.DefaultLifecycleProcessor.onRefresh(DefaultLifecycleProcessor.java:123)
	at org.springframework.context.support.AbstractApplicationContext.finishRefresh(AbstractApplicationContext.java:935)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:586)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:147)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:734)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:408)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1306)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1295)
	at com.metavirus.battleserver.BattleServerApplication.main(BattleServerApplication.java:19)

2023-04-10 16:07:50.513 INFO  --- [           main] netflix.discovery.DiscoveryClient[  443] : Initial registry fetch from primary servers failed
2023-04-10 16:07:50.514 WARN  --- [           main] netflix.discovery.DiscoveryClient[  304] : Using default backup registry implementation which does not do anything.
2023-04-10 16:07:50.514 INFO  --- [           main] netflix.discovery.DiscoveryClient[  448] : Initial registry fetch from backup servers failed
2023-04-10 16:07:50.515 INFO  --- [           main] netflix.discovery.DiscoveryClient[ 1321] : Starting heartbeat executor: renew interval is: 30
2023-04-10 16:07:50.516 INFO  --- [           main] .discovery.InstanceInfoReplicator[   60] : InstanceInfoReplicator onDemand update allowed rate per min is 4
2023-04-10 16:07:50.520 INFO  --- [           main] netflix.discovery.DiscoveryClient[  492] : Discovery Client initialized at timestamp 1681168070519 with initial instances count: 0
2023-04-10 16:07:50.521 INFO  --- [           main] o.s.c.n.e.s.EurekaServiceRegistry[   41] : Registering application MV-BATTLE-SERVER with eureka with status UP
2023-04-10 16:07:50.522 INFO  --- [           main] netflix.discovery.DiscoveryClient[ 1352] : Saw local status change event StatusChangeEvent [timestamp=1681168070522, current=UP, previous=STARTING]
2023-04-10 16:07:50.523 INFO  --- [nfoReplicator-0] netflix.discovery.DiscoveryClient[  873] : DiscoveryClient_MV-BATTLE-SERVER/TT-Legion-Laptop.mshome.net:MV-Battle-Server:8881: registering service...
2023-04-10 16:07:50.523 INFO  --- [           main] e.coyote.http11.Http11NioProtocol[  173] : Starting ProtocolHandler ["http-nio-8881"]
2023-04-10 16:07:50.533 INFO  --- [           main] w.embedded.tomcat.TomcatWebServer[  220] : Tomcat started on port(s): 8881 (http) with context path ''
2023-04-10 16:07:50.534 INFO  --- [           main] e.s.EurekaAutoServiceRegistration[  144] : Updating port to 8881
2023-04-10 16:07:50.866 INFO  --- [           main] .s.a.r.c.CachingConnectionFactory[  638] : Attempting to connect to: [localhost:5672]
2023-04-10 16:07:50.922 WARN  --- [ 127.0.0.1:5672] .c.impl.ForgivingExceptionHandler[  115] : An unexpected connection driver error occurred (Exception message: Socket closed)
2023-04-10 16:07:50.944 WARN  --- [:0:0:0:0:1:5672] .c.impl.ForgivingExceptionHandler[  115] : An unexpected connection driver error occurred (Exception message: Socket closed)
2023-04-10 16:07:50.945 INFO  --- [           main] .l.SimpleMessageListenerContainer[ 1866] : Broker not available; cannot force queue declarations during start: com.rabbitmq.client.AuthenticationFailureException: ACCESS_REFUSED - Login was refused using authentication mechanism PLAIN. For details see the broker logfile.
2023-04-10 16:07:50.950 INFO  --- [ntContainer#0-1] .s.a.r.c.CachingConnectionFactory[  638] : Attempting to connect to: [localhost:5672]
2023-04-10 16:07:50.955 WARN  --- [ 127.0.0.1:5672] .c.impl.ForgivingExceptionHandler[  115] : An unexpected connection driver error occurred (Exception message: Socket closed)
2023-04-10 16:07:50.959 WARN  --- [:0:0:0:0:1:5672] .c.impl.ForgivingExceptionHandler[  115] : An unexpected connection driver error occurred (Exception message: Socket closed)
2023-04-10 16:07:50.964 INFO  --- [ntContainer#0-1] .s.a.r.c.CachingConnectionFactory[  638] : Attempting to connect to: [localhost:5672]
2023-04-10 16:07:50.969 WARN  --- [ 127.0.0.1:5672] .c.impl.ForgivingExceptionHandler[  115] : An unexpected connection driver error occurred (Exception message: Socket closed)
2023-04-10 16:07:50.973 WARN  --- [:0:0:0:0:1:5672] .c.impl.ForgivingExceptionHandler[  115] : An unexpected connection driver error occurred (Exception message: Socket closed)
2023-04-10 16:07:50.974 WARN  --- [           main] ervletWebServerApplicationContext[  591] : Exception encountered during context initialization - cancelling refresh attempt: org.springframework.context.ApplicationContextException: Failed to start bean 'org.springframework.amqp.rabbit.config.internalRabbitListenerEndpointRegistry'; nested exception is org.springframework.amqp.AmqpIllegalStateException: Fatal exception on listener startup
2023-04-10 16:07:50.976 INFO  --- [ntContainer#0-1] .l.SimpleMessageListenerContainer[  648] : Waiting for workers to finish.
2023-04-10 16:07:50.976 INFO  --- [ntContainer#0-1] .l.SimpleMessageListenerContainer[  652] : Successfully waited for workers to finish.
2023-04-10 16:07:50.987 INFO  --- [           main] .m.c.service.game.BaseGameService[   78] : Service[MonsterCommonService] Shutting Down
2023-04-10 16:07:50.987 INFO  --- [           main] .m.c.service.game.BaseGameService[   78] : Service[MonsterCommonService] Shutdown Finished
2023-04-10 16:07:50.987 INFO  --- [           main] .m.c.service.game.BaseGameService[   78] : Service[RabbitMQService] Shutting Down
2023-04-10 16:07:50.987 INFO  --- [           main] .m.c.service.game.BaseGameService[   78] : Service[RabbitMQService] Shutdown Finished
2023-04-10 16:07:50.987 INFO  --- [           main] .m.c.service.game.BaseGameService[   78] : Service[PlayerCommonService] Shutting Down
2023-04-10 16:07:50.988 INFO  --- [           main] .m.c.service.game.BaseGameService[   78] : Service[PlayerCommonService] Shutdown Finished
2023-04-10 16:07:51.006 INFO  --- [           main] .m.c.service.game.BaseGameService[   78] : Service[GameDataGameService] Shutting Down
2023-04-10 16:07:51.006 INFO  --- [           main] .m.c.service.game.BaseGameService[   78] : Service[GameDataGameService] Shutdown Finished
2023-04-10 16:07:51.008 INFO  --- [           main] netflix.discovery.DiscoveryClient[  935] : Shutting down DiscoveryClient ...
2023-04-10 16:07:54.014 INFO  --- [           main] netflix.discovery.DiscoveryClient[  971] : Unregistering ...
